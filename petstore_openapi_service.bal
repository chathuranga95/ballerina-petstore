// AUTO-GENERATED FILE.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/http;

listener http:Listener ep0 = new (9090, config = {host: "localhost"});

type Pet record {
    int id;
    string name;
    string status;
};

type Error record {
    string message;
};

service / on ep0 {



    resource function put base1/cats/[int id](Pet pet) returns Pet|Error {
        return pet;
    }

    resource function delete base1/ cats/[int id]() returns Error {
        return {message: "Pet deleted"};
    }

    resource function get base1/base1/owners1() returns string[] {
        return ["John", "Jane"];
    }

    resource function post base1/owners1(string owner) returns string {
        return owner;
    }

    resource function get base1/owners1/[int id]() returns string|Error {
        return "John";
    }

    resource function put base1/owners1/[int id](string owner) returns string|Error {
        return owner;
    }

    resource function delete base1/ owners1/[int id]() returns Error {
        return {message: "Owner deleted"};
    }

    resource function get base1/stores1() returns string[] {
        return ["Store1", "Store2"];
    }

    resource function post base1/stores1(string store) returns string {
        return store;
    }

    resource function get base1/stores1/[int id]() returns string|Error {
        return "Store1";
    }

    resource function put base1/stores1/[int id](string store) returns string|Error {
        return store;
    }

    resource function delete base1/ stores1/[int id]() returns Error {
        return {message: "Store deleted"};
    }

    resource function get base1/products1() returns string[] {
        return ["Product1", "Product2"];
    }

    resource function post base1/products1(string product) returns string {
        return product;
    }

    resource function get base1/products1/[int id]() returns string|Error {
        return "Product1";
    }

    resource function put base1/products1/[int id](string product) returns string|Error {
        return product;
    }

    resource function delete base1/ products1/[int id]() returns Error {
        return {message: "Product deleted"};
    }

    resource function get base1/categories1() returns string[] {
        return ["Category1", "Category2"];
    }

    resource function post base1/categories1(string category) returns string {
        return category;
    }

    resource function get base1/categories1/[int id]() returns string|Error {
        return "Category1";
    }

    resource function put base1/categories1/[int id](string category) returns string|Error {
        return category;
    }

    resource function delete base1/ categories1/[int id]() returns Error {
        return {message: "Category deleted"};
    }

    resource function get base1/users1() returns string[] {
        return ["User1", "User2"];
    }

    resource function post base1/users1(string user) returns string {
        return user;
    }

    resource function get base1/users1/[int id]() returns string|Error {
        return "User1";
    }

    resource function put base1/users1/[int id](string user) returns string|Error {
        return user;
    }

    resource function delete base1/ users1/[int id]() returns Error {
        return {message: "User deleted"};
    }

    resource function get base1/reviews1() returns string[] {
        return ["Review1", "Review2"];
    }

    resource function post base1/reviews1(string review) returns string {
        return review;
    }

    resource function get base1/reviews1/[int id]() returns string|Error {
        return "Review1";
    }

    resource function put base1/reviews1/[int id](string review) returns string|Error {
        return review;
    }

    resource function delete base1/ reviews1/[int id]() returns Error {
        return {message: "Review deleted"};
    }

    resource function get base1/feedbacks1() returns string[] {
        return ["Feedback1", "Feedback2"];
    }

    resource function post base1/feedbacks1(string feedback) returns string {
        return feedback;
    }

    resource function get base1/feedbacks1/[int id]() returns string|Error {
        return "Feedback1";
    }

    resource function put base1/feedbacks1/[int id](string feedback) returns string|Error {
        return feedback;
    }

    resource function delete base1/ feedbacks1/[int id]() returns Error {
        return {message: "Feedback deleted"};
    }

    resource function get base1/shipments1() returns string[] {
        return ["Shipment1", "Shipment2"];
    }

    resource function post base1/shipments1(string shipment) returns string {
        return shipment;
    }

    resource function get base1/shipments1/[int id]() returns string|Error {
        return "Shipment1";
    }

    resource function put base1/shipments1/[int id](string shipment) returns string|Error {
        return shipment;
    }

    resource function delete base1/ shipments1/[int id]() returns Error {
        return {message: "Shipment deleted"};
    }

    resource function get base1/pets() returns Pet[] {
        return [
            {id: 1, name: "Max", status: "available"},
            {id: 2, name: "Bella", status: "sold"}
        ];
    }

    resource function post base1/pets(Pet pet) returns Pet {
        return pet;
    }

    resource function get base1/pets/[int id]() returns Pet|Error {
        return {id: 1, name: "Max", status: "available"};
    }

    resource function put base1/pets/[int id](Pet pet) returns Pet|Error {
        return pet;
    }

    resource function delete base1/ pets/[int id]() returns Error {
        return {message: "Pet deleted"};
    }

    resource function get base1/owners() returns string[] {
        return ["John", "Jane"];
    }

    resource function post base1/owners(string owner) returns string {
        return owner;
    }

    resource function get base1/owners/[int id]() returns string|Error {
        return "John";
    }

    resource function put base1/owners/[int id](string owner) returns string|Error {
        return owner;
    }

    resource function delete base1/ owners/[int id]() returns Error {
        return {message: "Owner deleted"};
    }

    resource function get base1/stores() returns string[] {
        return ["Store1", "Store2"];
    }

    resource function post base1/stores(string store) returns string {
        return store;
    }

    resource function get base1/stores/[int id]() returns string|Error {
        return "Store1";
    }

    resource function put base1/stores/[int id](string store) returns string|Error {
        return store;
    }

    resource function delete base1/ stores/[int id]() returns Error {
        return {message: "Store deleted"};
    }

    resource function get base1/orders() returns int[] {
        return [101, 102];
    }

    resource function post base1/orders(int 'order) returns int {
        return 'order;
    }

    resource function get base1/orders/[int id]() returns int|Error {
        return 101;
    }

    resource function put base1/orders/[int id](int 'order) returns int|Error {
        return 'order;
    }

    resource function delete base1/ orders/[int id]() returns Error {
        return {message: "Order deleted"};
    }

    resource function get base1/products() returns string[] {
        return ["Product1", "Product2"];
    }

    resource function post base1/products(string product) returns string {
        return product;
    }

    resource function get base1/products/[int id]() returns string|Error {
        return "Product1";
    }

    resource function put base1/products/[int id](string product) returns string|Error {
        return product;
    }

    resource function delete base1/ products/[int id]() returns Error {
        return {message: "Product deleted"};
    }

    resource function get base1/categories() returns string[] {
        return ["Category1", "Category2"];
    }

    resource function post base1/categories(string category) returns string {
        return category;
    }

    resource function get base1/categories/[int id]() returns string|Error {
        return "Category1";
    }

    resource function put base1/categories/[int id](string category) returns string|Error {
        return category;
    }

    resource function delete base1/ categories/[int id]() returns Error {
        return {message: "Category deleted"};
    }

    resource function get base1/users() returns string[] {
        return ["User1", "User2"];
    }

    resource function post base1/users(string user) returns string {
        return user;
    }

    resource function get base1/users/[int id]() returns string|Error {
        return "User1";
    }

    resource function put base1/users/[int id](string user) returns string|Error {
        return user;
    }

    resource function delete base1/ users/[int id]() returns Error {
        return {message: "User deleted"};
    }

    resource function get base1/reviews() returns string[] {
        return ["Review1", "Review2"];
    }

    resource function post base1/reviews(string review) returns string {
        return review;
    }

    resource function get base1/reviews/[int id]() returns string|Error {
        return "Review1";
    }

    resource function put base1/reviews/[int id](string review) returns string|Error {
        return review;
    }

    resource function delete base1/ reviews/[int id]() returns Error {
        return {message: "Review deleted"};
    }

    resource function get base1/feedbacks() returns string[] {
        return ["Feedback1", "Feedback2"];
    }

    resource function post base1/feedbacks(string feedback) returns string {
        return feedback;
    }

    resource function get base1/feedbacks/[int id]() returns string|Error {
        return "Feedback1";
    }

    resource function put base1/feedbacks/[int id](string feedback) returns string|Error {
        return feedback;
    }

    resource function delete base1/ feedbacks/[int id]() returns Error {
        return {message: "Feedback deleted"};
    }

    resource function get base1/shipments() returns string[] {
        return ["Shipment1", "Shipment2"];
    }

    resource function post base1/shipments(string shipment) returns string {
        return shipment;
    }

    resource function get base1/shipments/[int id]() returns string|Error {
        return "Shipment1";
    }

    resource function put base1/shipments/[int id](string shipment) returns string|Error {
        return shipment;
    }

    resource function delete base1/ shipments/[int id]() returns Error {
        return {message: "Shipment deleted"};
    }

    resource function get base1/invoices() returns string[] {
        return ["Invoice1", "Invoice2"];
    }

    resource function post base1/invoices(string invoice) returns string {
        return invoice;
    }

    resource function get base1/invoices/[int id]() returns string|Error {
        return "Invoice1";
    }

    resource function put base1/invoices/[int id](string invoice) returns string|Error {
        return invoice;
    }

    resource function delete base1/ invoices/[int id]() returns Error {
        return {message: "Invoice deleted"};
    }

    resource function get base1/payments() returns string[] {
        return ["Payment1", "Payment2"];
    }

    resource function post base1/payments(string payment) returns string {
        return payment;
    }

    resource function get base1/payments/[int id]() returns string|Error {
        return "Payment1";
    }

    resource function put base1/payments/[int id](string payment) returns string|Error {
        return payment;
    }

    resource function delete base1/ payments/[int id]() returns Error {
        return {message: "Payment deleted"};
    }

    resource function get base1/notifications() returns string[] {
        return ["Notification1", "Notification2"];
    }

    resource function post base1/notifications(string notification) returns string {
        return notification;
    }

    resource function get base1/notifications/[int id]() returns string|Error {
        return "Notification1";
    }

    resource function put base1/notifications/[int id](string notification) returns string|Error {
        return notification;
    }

    resource function delete base1/ notifications/[int id]() returns Error {
        return {message: "Notification deleted"};
    }

    resource function get base1/messages() returns string[] {
        return ["Message1", "Message2"];
    }

    resource function post base1/messages(string message) returns string {
        return message;
    }

    resource function get base1/messages/[int id]() returns string|Error {
        return "Message1";
    }

    resource function put base1/messages/[int id](string message) returns string|Error {
        return message;
    }

    resource function delete base1/ messages/[int id]() returns Error {
        return {message: "Message deleted"};
    }

    resource function get cats() returns Pet[] {
        return [
            {id: 1, name: "Max", status: "available"},
            {id: 2, name: "Bella", status: "sold"}
        ];
    }

    resource function post cats(Pet pet) returns Pet {
        return pet;
    }

    resource function get cats/[int id]() returns Pet|Error {
        return {id: 1, name: "Max", status: "available"};
    }

    resource function put cats/[int id](Pet pet) returns Pet|Error {
        return pet;
    }

    resource function delete cats/[int id]() returns Error {
        return {message: "Pet deleted"};
    }

    resource function get owners1() returns string[] {
        return ["John", "Jane"];
    }

    resource function post owners1(string owner) returns string {
        return owner;
    }

    resource function get owners1/[int id]() returns string|Error {
        return "John";
    }

    resource function put owners1/[int id](string owner) returns string|Error {
        return owner;
    }

    resource function delete owners1/[int id]() returns Error {
        return {message: "Owner deleted"};
    }

    resource function get stores1() returns string[] {
        return ["Store1", "Store2"];
    }

    resource function post stores1(string store) returns string {
        return store;
    }

    resource function get stores1/[int id]() returns string|Error {
        return "Store1";
    }

    resource function put stores1/[int id](string store) returns string|Error {
        return store;
    }

    resource function delete stores1/[int id]() returns Error {
        return {message: "Store deleted"};
    }

    resource function get products1() returns string[] {
        return ["Product1", "Product2"];
    }

    resource function post products1(string product) returns string {
        return product;
    }

    resource function get products1/[int id]() returns string|Error {
        return "Product1";
    }

    resource function put products1/[int id](string product) returns string|Error {
        return product;
    }

    resource function delete products1/[int id]() returns Error {
        return {message: "Product deleted"};
    }

    resource function get categories1() returns string[] {
        return ["Category1", "Category2"];
    }

    resource function post categories1(string category) returns string {
        return category;
    }

    resource function get categories1/[int id]() returns string|Error {
        return "Category1";
    }

    resource function put categories1/[int id](string category) returns string|Error {
        return category;
    }

    resource function delete categories1/[int id]() returns Error {
        return {message: "Category deleted"};
    }

    resource function get users1() returns string[] {
        return ["User1", "User2"];
    }

    resource function post users1(string user) returns string {
        return user;
    }

    resource function get users1/[int id]() returns string|Error {
        return "User1";
    }

    resource function put users1/[int id](string user) returns string|Error {
        return user;
    }

    resource function delete users1/[int id]() returns Error {
        return {message: "User deleted"};
    }

    resource function get reviews1() returns string[] {
        return ["Review1", "Review2"];
    }

    resource function post reviews1(string review) returns string {
        return review;
    }

    resource function get reviews1/[int id]() returns string|Error {
        return "Review1";
    }

    resource function put reviews1/[int id](string review) returns string|Error {
        return review;
    }

    resource function delete reviews1/[int id]() returns Error {
        return {message: "Review deleted"};
    }

    resource function get feedbacks1() returns string[] {
        return ["Feedback1", "Feedback2"];
    }

    resource function post feedbacks1(string feedback) returns string {
        return feedback;
    }

    resource function get feedbacks1/[int id]() returns string|Error {
        return "Feedback1";
    }

    resource function put feedbacks1/[int id](string feedback) returns string|Error {
        return feedback;
    }

    resource function delete feedbacks1/[int id]() returns Error {
        return {message: "Feedback deleted"};
    }

    resource function get shipments1() returns string[] {
        return ["Shipment1", "Shipment2"];
    }

    resource function post shipments1(string shipment) returns string {
        return shipment;
    }

    resource function get shipments1/[int id]() returns string|Error {
        return "Shipment1";
    }

    resource function put shipments1/[int id](string shipment) returns string|Error {
        return shipment;
    }

    resource function delete shipments1/[int id]() returns Error {
        return {message: "Shipment deleted"};
    }

    resource function get pets() returns Pet[] {
        return [
            {id: 1, name: "Max", status: "available"},
            {id: 2, name: "Bella", status: "sold"}
        ];
    }

    resource function post pets(Pet pet) returns Pet {
        return pet;
    }

    resource function get pets/[int id]() returns Pet|Error {
        return {id: 1, name: "Max", status: "available"};
    }

    resource function put pets/[int id](Pet pet) returns Pet|Error {
        return pet;
    }

    resource function delete pets/[int id]() returns Error {
        return {message: "Pet deleted"};
    }

    resource function get owners() returns string[] {
        return ["John", "Jane"];
    }

    resource function post owners(string owner) returns string {
        return owner;
    }

    resource function get owners/[int id]() returns string|Error {
        return "John";
    }

    resource function put owners/[int id](string owner) returns string|Error {
        return owner;
    }

    resource function delete owners/[int id]() returns Error {
        return {message: "Owner deleted"};
    }

    resource function get stores() returns string[] {
        return ["Store1", "Store2"];
    }

    resource function post stores(string store) returns string {
        return store;
    }

    resource function get stores/[int id]() returns string|Error {
        return "Store1";
    }

    resource function put stores/[int id](string store) returns string|Error {
        return store;
    }

    resource function delete stores/[int id]() returns Error {
        return {message: "Store deleted"};
    }

    resource function get orders() returns int[] {
        return [101, 102];
    }

    resource function post orders(int 'order) returns int {
        return 'order;
    }

    resource function get orders/[int id]() returns int|Error {
        return 101;
    }

    resource function put orders/[int id](int 'order) returns int|Error {
        return 'order;
    }

    resource function delete orders/[int id]() returns Error {
        return {message: "Order deleted"};
    }

    resource function get products() returns string[] {
        return ["Product1", "Product2"];
    }

    resource function post products(string product) returns string {
        return product;
    }

    resource function get products/[int id]() returns string|Error {
        return "Product1";
    }

    resource function put products/[int id](string product) returns string|Error {
        return product;
    }

    resource function delete products/[int id]() returns Error {
        return {message: "Product deleted"};
    }

    resource function get categories() returns string[] {
        return ["Category1", "Category2"];
    }

    resource function post categories(string category) returns string {
        return category;
    }

    resource function get categories/[int id]() returns string|Error {
        return "Category1";
    }

    resource function put categories/[int id](string category) returns string|Error {
        return category;
    }

    resource function delete categories/[int id]() returns Error {
        return {message: "Category deleted"};
    }

    resource function get users() returns string[] {
        return ["User1", "User2"];
    }

    resource function post users(string user) returns string {
        return user;
    }

    resource function get users/[int id]() returns string|Error {
        return "User1";
    }

    resource function put users/[int id](string user) returns string|Error {
        return user;
    }

    resource function delete users/[int id]() returns Error {
        return {message: "User deleted"};
    }

    resource function get reviews() returns string[] {
        return ["Review1", "Review2"];
    }

    resource function post reviews(string review) returns string {
        return review;
    }

    resource function get reviews/[int id]() returns string|Error {
        return "Review1";
    }

    resource function put reviews/[int id](string review) returns string|Error {
        return review;
    }

    resource function delete reviews/[int id]() returns Error {
        return {message: "Review deleted"};
    }

    resource function get feedbacks() returns string[] {
        return ["Feedback1", "Feedback2"];
    }

    resource function post feedbacks(string feedback) returns string {
        return feedback;
    }

    resource function get feedbacks/[int id]() returns string|Error {
        return "Feedback1";
    }

    resource function put feedbacks/[int id](string feedback) returns string|Error {
        return feedback;
    }

    resource function delete feedbacks/[int id]() returns Error {
        return {message: "Feedback deleted"};
    }

    resource function get shipments() returns string[] {
        return ["Shipment1", "Shipment2"];
    }

    resource function post shipments(string shipment) returns string {
        return shipment;
    }

    resource function get shipments/[int id]() returns string|Error {
        return "Shipment1";
    }

    resource function put shipments/[int id](string shipment) returns string|Error {
        return shipment;
    }

    resource function delete shipments/[int id]() returns Error {
        return {message: "Shipment deleted"};
    }

    resource function get invoices() returns string[] {
        return ["Invoice1", "Invoice2"];
    }

    resource function post invoices(string invoice) returns string {
        return invoice;
    }

    resource function get invoices/[int id]() returns string|Error {
        return "Invoice1";
    }

    resource function put invoices/[int id](string invoice) returns string|Error {
        return invoice;
    }

    resource function delete invoices/[int id]() returns Error {
        return {message: "Invoice deleted"};
    }

    resource function get payments() returns string[] {
        return ["Payment1", "Payment2"];
    }

    resource function post payments(string payment) returns string {
        return payment;
    }

    resource function get payments/[int id]() returns string|Error {
        return "Payment1";
    }

    resource function put payments/[int id](string payment) returns string|Error {
        return payment;
    }

    resource function delete payments/[int id]() returns Error {
        return {message: "Payment deleted"};
    }

    resource function get notifications() returns string[] {
        return ["Notification1", "Notification2"];
    }

    resource function post notifications(string notification) returns string {
        return notification;
    }

    resource function get notifications/[int id]() returns string|Error {
        return "Notification1";
    }

    resource function put notifications/[int id](string notification) returns string|Error {
        return notification;
    }

    resource function delete notifications/[int id]() returns Error {
        return {message: "Notification deleted"};
    }

    resource function get messages() returns string[] {
        return ["Message1", "Message2"];
    }

    resource function post messages(string message) returns string {
        return message;
    }

    resource function get messages/[int id]() returns string|Error {
        return "Message1";
    }

    resource function put messages/[int id](string message) returns string|Error {
        return message;
    }

    resource function delete messages/[int id]() returns Error {
        return {message: "Message deleted"};
    }
}
